function Auto_Generate_WindField(dataloc,tau,an,bn,a0,phi,theta,dim)
%%%%dataloc is where the data stream is written
%%%%tau is the period such that w0 = pi/tau
%%%%magnitudes and an and bn are the magnitudes of each wave form but they
%%%%need to be 3xN vectors where the first row is u and the next two are u
%%%%and w. a0 is the mean value of the windfield however this needs to be a 3x1
%%%%vector for u,v and w

w0 = pi/tau;

%%%%Assume that all autogenerated files have the same xcoord,ycoord,zcoord
%%%%and tspan we will also assume that we don't need to create
%%%%SampleTimes.txt, or Zcoord.txt. So we only need to
%%%%generate U0.txt, U1.txt, V0.txt, V1.txt, W0.txt, W1.txt

dimX = dim;
dimY = dim;
dx = 1000/dimX; %%%WE NEED TO OVERHAUL THIS CODE AND ALL FOR DIFFERENT VALUES OF
dy = 1000/dimX;
xcoord = -dx*(dimX-1)/2:dx:dx*(dimX-1)/2;
ycoord = -dy*(dimY-1)/2:dy:dy*(dimY-1)/2;
zcoord = dlmread([dataloc,'Zcoord.txt']);

%%%Becuase dimX and dx have changed we actually need to change the
%%%Parameters.txt file
%%dx,dy,ztop,1,dimZ,dimX,dimY - Remember we're keeping dimZ at 40
dlmwrite([dataloc,'Parameters.txt'],[dx,dy,1000,1,40,dim,dim]);

%%%%For our purposes we will assume that U0=U1,V0=V1,W0=W1
ux = zeros(1,dimX) + a0(1);
vx = ux;
wx = vx;
%%Let's perhaps randomize the phase for u,v, and w as well as the magnitude
%%%Then again an, and bn will take care of that for us
[d,N] = size(an);

for n = 1:N
    ux = ux + an(1,n)*cos(n*w0*xcoord-phi(1,1))+bn(1,n)*sin(n*w0*xcoord-theta(1,1));
    vx = vx + an(2,n)*cos(n*w0*xcoord-phi(1,2))+bn(2,n)*sin(n*w0*xcoord-theta(1,2));
    wx = wx + an(3,n)*cos(n*w0*xcoord-phi(1,3))+bn(3,n)*sin(n*w0*xcoord-theta(1,3));
end

plottool(1,'Auto Generated Wind Field',12,'X-coordinate (m)','Velocity (m/s)');
plot(xcoord,ux,'b-','LineWidth',2)
plot(xcoord,vx,'r-','LineWidth',2)
plot(xcoord,wx,'g-','LineWidth',2)

%%%Ok so now we have ux let's generate uy
uy = zeros(1,dimY) + a0(1);
vy = uy;
wy = vy;
%%Let's perhaps randomize the phase for u,v, and w as well as the magnitude
%%%Then again an, and bn will take care of that for us
[d,N] = size(an);

for n = 1:N
    uy = uy + an(1,n)*cos(n*w0*ycoord-phi(2,1))+bn(1,n)*sin(n*w0*ycoord-theta(2,1));
    vy = vy + an(2,n)*cos(n*w0*ycoord-phi(2,2))+bn(2,n)*sin(n*w0*ycoord-theta(2,2));
    wy = wy + an(3,n)*cos(n*w0*ycoord-phi(2,3))+bn(3,n)*sin(n*w0*ycoord-theta(2,3));
end

plottool(1,'Auto Generated Wind Field',12,'Y-coordinate (m)','Velocity (m/s)');
plot(ycoord,uy,'b-','LineWidth',2)
plot(ycoord,vy,'r-','LineWidth',2)
plot(ycoord,wy,'g-','LineWidth',2)

%%%%So now we need to generate two meshes
[yy,xx] = meshgrid(xcoord,ycoord);
%%% 40 x 40 = (40 x 1) * (1 x 40) 
uxx = ones(dimX,1)*ux;
vxx = ones(dimX,1)*vx;
wxx = ones(dimX,1)*wx;
uyy = (ones(dimY,1)*uy)';
vyy = (ones(dimY,1)*vy)';
wyy = (ones(dimY,1)*wy)';

plottool(1,'Auto Mesh',12,'X-Coordinate','Y-Coordinate','Velocity (m/s)');
mesh(xx,yy,uxx)
mesh(xx,yy,vxx)
mesh(xx,yy,wxx)

plottool(1,'Auto Mesh',12,'Y-Coordinate','X-Coordinate','Velocity (m/s)');
mesh(xx,yy,uyy)
mesh(xx,yy,vyy)
mesh(xx,yy,wyy)

%%%Now we need to combine the two together
umat = (uxx.*uyy)/max(max(abs(uyy)));
vmat = vxx.*vyy/max(max(abs(vyy)));
wmat = wxx.*wyy/max(max(abs(wyy)));

plottool(1,'Auto Mesh',12,'X-Coordinate','Y-Coordinate','U Velocity (m/s)');
mesh(xx,yy,umat)
view(-27,50)

plottool(1,'Auto Mesh',12,'X-Coordinate','Y-Coordinate','V Velocity (m/s)');
mesh(xx,yy,vmat)
view(-27,50)

plottool(1,'Auto Mesh',12,'X-Coordinate','Y-Coordinate','W Velocity (m/s)');
mesh(xx,yy,wmat)
view(-27,50)

%%%%Now it's time to send the matrices to U0,U1,etc
system(['rm ',dataloc,'U*.txt']);
system(['rm ',dataloc,'V*.txt']);
system(['rm ',dataloc,'W*.txt']);
for idx = 1:length(zcoord)
    disp(['Writing Data Files = ',num2str(zcoord(idx))])
    dlmwrite([dataloc,'U0.txt'],umat,'-append');
    dlmwrite([dataloc,'U1.txt'],umat,'-append');
    dlmwrite([dataloc,'V0.txt'],vmat,'-append');
    dlmwrite([dataloc,'V1.txt'],vmat,'-append');
    dlmwrite([dataloc,'W0.txt'],wmat,'-append');
    dlmwrite([dataloc,'W1.txt'],wmat,'-append');
end





